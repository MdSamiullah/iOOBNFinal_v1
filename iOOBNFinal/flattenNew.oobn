class flattenNew
{
    inputs = ();
    outputs = ();
    node_size = (80 40);
    HR_DBN_Num_Slices = "5";
    HR_Desc = "";
    HR_OOBN_CheckConsistency = "1";
    HR_OOBN_FitExpand = "1";
    HR_Zoom_ZoomFactor = "100";
    HR_Groups_GroupColors = "";
    HR_Groups_GroupNames = "";
    HR_Groups_UserGroupsNo = "0";
    HR_Utility_Link = "63";
    HR_Probabilistic_Link = "63";
    HR_Functional_Link = "63";
    HR_Binding_Link = "63";
    HR_Information_Arc = "63";
    HR_Color_Interface = "21";
    HR_Color_Instance = "0";
    HR_Color_DiscreteFunction = "5";
    HR_Color_Function = "4";
    HR_Color_Utility = "36";
    HR_Color_Decision = "17";
    HR_Color_ContinuousChance = "48";
    HR_Color_DiscreteChance = "16";
    HR_Monitor_InitSD = "2";
    HR_Monitor_Utility_Arrange = "0";
    HR_Monitor_Mean_Variance = "1";
    HR_Monitor_Chance_Utility = "1";
    HR_Monitor_InitStates = "5";
    HR_Monitor_OpenGraph = "0";
    HR_Monitor_GraphPrecision = "100";
    HR_Monitor_AutoUpdGraph = "0";
    HR_Compile_MaxMinimalSeparators = "100000";
    HR_Compile_ApproxEpsilon = "1.0E-5";
    HR_Compile_Approximate = "0";
    HR_Compile_SaveToMemory = "0";
    HR_Compile_Compress = "0";
    HR_Compile_TriangMethod = "0";
    HR_Propagate_AutoNormal = "1";
    HR_Propagate_AutoSum = "1";
    HR_Propagate_Auto = "1";
    HR_Font_Italic = "0";
    HR_Font_Weight = "400";
    HR_Font_Size = "-12";
    HR_Font_Name = "javax.swing.plaf.FontUIResource[family=Dialog,name=Dialog,style=bold,size=12]";
    HR_Grid_GridShow = "0";
    HR_Grid_GridSnap = "0";
    HR_Grid_Y = "40";
    HR_Grid_X = "40";

    node V
    {
	label = "V";
	position = (200 40);
	states = ("True" "False");
	HR_LinkGroup = "[C:0][T:0]";
	HR_LinkMode = "[C:0][T:0]";
	type = "Discrete";
	subType = "Boolean";
    }

    node S
    {
	label = "S";
	position = (200 40);
	states = ("True" "False");
	HR_LinkGroup = "[L2:0][B:0][L1:0]";
	HR_LinkMode = "[L2:0][B:0][L1:0]";
	type = "Discrete";
	subType = "Boolean";
    }

    node T
    {
	label = "T";
	position = (200 40);
	states = ("True" "False");
	HR_LinkGroup = "[E:0]";
	HR_LinkMode = "[E:0]";
	type = "Discrete";
	subType = "Boolean";
    }

    node L1
    {
	label = "L1";
	position = (200 40);
	states = ("True" "False");
	HR_LinkGroup = "[E:0]";
	HR_LinkMode = "[E:0]";
	type = "Discrete";
	subType = "Boolean";
    }

    node B
    {
	label = "B";
	position = (200 40);
	states = ("True" "False");
	HR_LinkGroup = "[D:0]";
	HR_LinkMode = "[D:0]";
	type = "Discrete";
	subType = "Boolean";
    }

    node C
    {
	label = "C";
	position = (200 40);
	states = ("True" "False");
	HR_LinkGroup = "[CL:0]";
	HR_LinkMode = "[CL:0]";
	type = "Discrete";
	subType = "Boolean";
    }

    node L2
    {
	label = "L2";
	position = (200 40);
	states = ("True" "False");
	HR_LinkGroup = "[CL:0]";
	HR_LinkMode = "[CL:0]";
	type = "Discrete";
	subType = "Boolean";
    }

    node E
    {
	label = "E";
	position = (200 40);
	states = ("True" "False");
	HR_LinkGroup = "[D:0][X1:0]";
	HR_LinkMode = "[D:0][X1:0]";
	type = "Discrete";
	subType = "Boolean";
    }

    node CL
    {
	label = "CL";
	position = (200 40);
	states = ("True" "False");
	HR_LinkGroup = "[G:0][X2:0]";
	HR_LinkMode = "[G:0][X2:0]";
	type = "Discrete";
	subType = "Boolean";
    }

    node X1
    {
	label = "X1";
	position = (200 40);
	states = ("True" "False");
	HR_LinkGroup = "[P:0]";
	HR_LinkMode = "[P:0]";
	type = "Discrete";
	subType = "Boolean";
    }

    node D
    {
	label = "D";
	position = (383 84);
	states = ("True" "False");
	type = "Discrete";
	subType = "Boolean";
    }

    node X2
    {
	label = "X2";
	position = (91 237);
	states = ("True" "False");
	HR_LinkGroup = "[P:0]";
	HR_LinkMode = "[P:0]";
	type = "Discrete";
	subType = "Boolean";
    }

    node G
    {
	label = "G";
	position = (200 360);
	states = ("True" "False");
	HR_LinkGroup = "[P:0]";
	HR_LinkMode = "[P:0]";
	type = "Discrete";
	subType = "Boolean";
    }

    node P
    {
	label = "P";
	position = (351 278);
	states = ("True" "False");
	type = "Discrete";
	subType = "Boolean";
    }

    potential (V)
    {
	data = ( 0.5 0.5 );
    }

    potential (S)
    {
	data = ( 0.5 0.5 );
    }

    potential (T | V)
    {
	data = (( 0.5 0.5 )	%  V=True
		( 0.5 0.5 ));	%  V=False
    }

    potential (L1 | S)
    {
	data = (( 0.5 0.5 )	%  S=True
		( 0.5 0.5 ));	%  S=False
    }

    potential (B | S)
    {
	data = (( 0.5 0.5 )	%  S=True
		( 0.5 0.5 ));	%  S=False
    }

    potential (C | V)
    {
	data = (( 0.5 0.5 )	%  V=True
		( 0.5 0.5 ));	%  V=False
    }

    potential (L2 | S)
    {
	data = (( 0.5 0.5 )	%  S=True
		( 0.5 0.5 ));	%  S=False
    }

    potential (E | T L1)
    {
	data = ((( 0.5 0.5 )	%  T=True  L1=True
		 ( 0.5 0.5 ))	%  T=True  L1=False
		(( 0.5 0.5 )	%  T=False  L1=True
		 ( 0.5 0.5 )));	%  T=False  L1=False
    }

    potential (CL | C L2)
    {
	data = ((( 0.5 0.5 )	%  C=True  L2=True
		 ( 0.5 0.5 ))	%  C=True  L2=False
		(( 0.5 0.5 )	%  C=False  L2=True
		 ( 0.5 0.5 )));	%  C=False  L2=False
    }

    potential (X1 | E)
    {
	data = (( 0.5 0.5 )	%  E=True
		( 0.5 0.5 ));	%  E=False
    }

    potential (D | E B)
    {
	data = ((( 0.5 0.5 )	%  E=True  B=True
		 ( 0.5 0.5 ))	%  E=True  B=False
		(( 0.5 0.5 )	%  E=False  B=True
		 ( 0.5 0.5 )));	%  E=False  B=False
    }

    potential (X2 | CL)
    {
	data = (( 0.5 0.5 )	%  CL=True
		( 0.5 0.5 ));	%  CL=False
    }

    potential (G | CL)
    {
	data = (( 0.5 0.5 )	%  CL=True
		( 0.5 0.5 ));	%  CL=False
    }

    potential (P | X2 G X1)
    {
	data = (((( 0.5 0.5 )	%  X2=True  G=True  X1=True
		  ( 0.5 0.5 ))	%  X2=True  G=True  X1=False
		 (( 0.5 0.5 )	%  X2=True  G=False  X1=True
		  ( 0.5 0.5 )))	%  X2=True  G=False  X1=False
		((( 0.5 0.5 )	%  X2=False  G=True  X1=True
		  ( 0.5 0.5 ))	%  X2=False  G=True  X1=False
		 (( 0.5 0.5 )	%  X2=False  G=False  X1=True
		  ( 0.5 0.5 ))));	%  X2=False  G=False  X1=False
    }
} % class flattenNew
