class AnnualGrassHerbicide2
{
    inputs = (Product Application Input_Seeds Input_Cover Input_Dead Input_Adults);
    outputs = (Output_Cover Output_Seeds Output_Dead Output_Adults);
    node_size = (100 55);
    HR_ToolBar_CDVT = "0";
    HR_Html_Desc = "0";
    HR_HTML_Desc = "";
    HR_Groups_IDs = "";
    HR_Node_Label_Style = "0";
    HR_Desc = "";
    HR_OOBN_CheckConsistency = "1";
    HR_OOBN_FitExpand = "1";
    HR_Zoom_ZoomFactor = "100";
    HR_Groups_GroupColors = "";
    HR_Groups_GroupNames = "";
    HR_Groups_UserGroupsNo = "0";
    HR_Color_Interface = "21";
    HR_Color_Instance = "0";
    HR_Color_DiscreteFunction = "5";
    HR_Color_Function = "4";
    HR_Color_Utility = "36";
    HR_Color_Decision = "17";
    HR_Color_ContinuousChance = "48";
    HR_Color_DiscreteChance = "16";
    HR_Monitor_InitSD = "2";
    HR_Monitor_Utility_Arrange = "0";
    HR_Monitor_Mean_Variance = "1";
    HR_Monitor_Chance_Utility = "1";
    HR_Monitor_InitStates = "5";
    HR_Monitor_OpenGraph = "0";
    HR_Monitor_GraphPrecision = "100";
    HR_Monitor_AutoUpdGraph = "0";
    HR_Compile_MaxMinimalSeparators = "100000";
    HR_Compile_ApproxEpsilon = "1.0E-5";
    HR_Compile_Approximate = "0";
    HR_Compile_SaveToMemory = "0";
    HR_Compile_Compress = "0";
    HR_Compile_TriangMethod = "0";
    HR_Propagate_AutoNormal = "1";
    HR_Propagate_AutoSum = "1";
    HR_Propagate_Auto = "1";
    HR_Font_Italic = "0";
    HR_Font_Weight = "400";
    HR_Font_Size = "-12";
    HR_Font_Name = "javax.swing.plaf.FontUIResource[family=Tahoma,name=Tahoma,style=plain,size=11]";
    HR_Grid_GridShow = "0";
    HR_Grid_GridSnap = "0";
    HR_Grid_Y = "40";
    HR_Grid_X = "40";

    node Output_Adults
    {
	label = "Output Adult\nDensity";
	position = (774 358);
	states = ("0 - 1" "1 - 2" "" "" "" "");
	subtype = interval;
	state_values = (0 0.01 10 50 100 250 10000);
	HR_LinkMode = "[Output_Seed:0][Output_Seedling:0][Seed_Dec:0][C10:0][Basal_Inc:0][Output_Basal:0][Output_Cover:0]";
	HR_State_4 = "";
	HR_State_3 = "";
	HR_State_2 = "";
	HR_Desc = "";
	HR_State_1 = "";
	HR_State_0 = "";
	HR_HTML_Desc = "";
	HR_LinkControlPoints = "";
	HR_State_5 = "";
	HR_NodeSize = "(100, 55)";
	HR_Group = "0";
    }

    node Input_Adults
    {
	label = "Input Adult\nDensity";
	position = (195 356);
	states = ("0 - 1" "1 - 2" "" "" "" "");
	subtype = interval;
	state_values = (0 0.01 10 50 100 250 10000);
	HR_NodeSize = "(100, 55)";
	HR_State_5 = "";
	HR_LinkControlPoints = "";
	HR_HTML_Desc = "";
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_State_2 = "";
	HR_State_3 = "";
	HR_State_4 = "";
	HR_LinkMode = "[Output_Seed:0][Output_Seedling:0][Seed_Dec:0][C10:0][Basal_Inc:0][Output_Basal:0][Output_Adult:0][Cover_Dec:0][Cover_Inc:0][Output_Seeds:0][Output_Adults:0]";
	HR_Group = "0";
    }

    node Cover_Dec
    {
	label = "Cover Death";
	position = (497 469);
	states = ("0 - 1" "1 - 2" "" "" "" "" "" "");
	subtype = interval;
	state_values = (0 0.01 1 5 10 25 50 75 100);
	HR_State_7 = "";
	HR_State_6 = "";
	HR_State_5 = "";
	HR_LinkMode = "[Output_Cover:0][Output_Dead:0]";
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_LinkControlPoints = "";
	HR_HTML_Desc = "";
	HR_State_2 = "";
	HR_State_3 = "";
	HR_State_4 = "";
	HR_NodeSize = "(100, 55)";
	HR_Group = "0";
    }

    node Input_Dead
    {
	label = "Input Dead \nCover";
	position = (193 500);
	states = ("" "" "" "" "" "" "");
	subtype = interval;
	state_values = (0 0.01 1 5 25 50 75 100);
	HR_NodeSize = "(100, 55)";
	HR_LinkControlPoints = "";
	HR_State_0 = "";
	HR_State_1 = "";
	HR_State_2 = "";
	HR_State_3 = "";
	HR_State_4 = "";
	HR_State_5 = "";
	HR_Desc = "";
	HR_HTML_Desc = "";
	HR_State_6 = "";
	HR_LinkMode = "[NCG_1_1:0][Com:0][TC:0][OC:0][Output_Dead:0][C27:0][Dead_Dec:0][Dead_Burnt:0][C1:0][RBio:0]";
	HR_Group = "0";
    }

    node Input_Cover
    {
	label = "Input \nCover";
	position = (193 438);
	states = ("" "" "" "" "" "" "");
	subtype = interval;
	state_values = (0 0.01 1 5 25 50 75 100);
	HR_LinkControlPoints = "";
	HR_State_0 = "";
	HR_State_1 = "";
	HR_State_2 = "";
	HR_State_3 = "";
	HR_State_4 = "";
	HR_State_5 = "";
	HR_Desc = "";
	HR_HTML_Desc = "";
	HR_State_6 = "";
	HR_LinkMode = "[C2:0][CT:0][Output_Cover:0][C19:0][C20:0][Cover_Inc:0][Cover_Dec:0][Cover_Burnt:0][C1:0][New_Cover:0][RBio:0]";
	HR_Group = "0";
    }

    node Input_Seeds
    {
	label = "Input Seed\nDensity";
	position = (195 254);
	states = ("" "" "" "" "");
	subtype = interval;
	state_values = (0 0.01 50 100 200 300);
	HR_State_4 = "";
	HR_State_3 = "";
	HR_LinkControlPoints = "";
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_HTML_Desc = "";
	HR_State_2 = "";
	HR_LinkMode = "[C2:0][C4:0][C5:0][Output_Seed:0][Output_Seeds:0][Death_Seeds:0][Germ_Seeds:0]";
	HR_Group = "0";
    }

    node Output_Dead
    {
	label = "Output Dead \nCover";
	position = (775 504);
	states = ("" "" "" "" "" "" "");
	subtype = interval;
	state_values = (0 0.01 1 5 25 50 75 100);
	HR_HTML_Desc = "";
	HR_Desc = "";
	HR_State_5 = "";
	HR_State_4 = "";
	HR_State_3 = "";
	HR_State_2 = "";
	HR_State_1 = "";
	HR_State_0 = "";
	HR_LinkMode = "[NCG_1_1:0][Com:0][TC:0][OC:0][C1:0]";
	HR_LinkControlPoints = "";
	HR_NodeSize = "(100, 55)";
	HR_State_6 = "";
	HR_Group = "0";
    }

    node Output_Seeds
    {
	label = "Output Seed\nDensity";
	position = (778 256);
	states = ("" "" "" "" "");
	subtype = interval;
	state_values = (0 0.01 50 100 200 300);
	HR_State_2 = "";
	HR_HTML_Desc = "";
	HR_Desc = "";
	HR_State_1 = "";
	HR_State_0 = "";
	HR_LinkMode = "";
	HR_LinkControlPoints = "";
	HR_State_3 = "";
	HR_State_4 = "";
	HR_Group = "0";
    }

    node Output_Cover
    {
	label = "Output \nCover";
	position = (774 440);
	states = ("" "" "" "" "" "" "");
	subtype = interval;
	state_values = (0 0.01 1 5 25 50 75 100);
	HR_State_0 = "";
	HR_State_1 = "";
	HR_State_2 = "";
	HR_State_3 = "";
	HR_State_4 = "";
	HR_State_5 = "";
	HR_Desc = "";
	HR_HTML_Desc = "";
	HR_LinkMode = "[C2:0][CT:0][C1:0]";
	HR_State_6 = "";
	HR_Group = "0";
    }

    node CBAR
    {
	label = "Cover/Basal/\nAdult\nReduction";
	position = (431 163);
	states = ("0 - 1" "1 - 2" "2 - 3");
	subtype = interval;
	state_values = (0 1 2 3);
	HR_State_3 = "";
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_HTML_Desc = "";
	HR_State_2 = "";
	HR_LinkMode = "[Output_Cover:0][Output_Dead:0][RBio:0][Cover_Dec:0][Output_Seedlings:0][Output_Basal:0][Output_Adults:0]";
	HR_Group = "0";
    }

    node SR
    {
	label = "Seed\nReduction";
	position = (550 163);
	states = ("" "" "");
	subtype = number;
	state_values = (0 0.1 0.95);
	HR_State_3 = "";
	HR_LinkMode = "[Output_Cover:0][Output_Dead:0][RBio:0][Output_Seedlings:0][Output_Seeds:0]";
	HR_State_2 = "";
	HR_HTML_Desc = "";
	HR_Desc = "";
	HR_State_1 = "";
	HR_State_0 = "";
	HR_Group = "0";
    }

    node Application
    {
	label = "Application";
	position = (557 55);
	states = ("Spot" "Boom/Spread" "Air" "None");
	HR_State_3 = "";
	HR_State_2 = "";
	HR_Desc = "";
	HR_State_1 = "";
	HR_State_0 = "";
	HR_LinkMode = "[HerbicideCost:0][CBAR:0][SR:0]";
	HR_Group = "0";
    }

    node Product
    {
	label = "Product";
	position = (424 54);
	states = ("Flupopranate" "Fusilade" "Glyphosate" "MCPA" "Metsulphuron" "Tordon" "Grazon");
	HR_LinkMode = "[BurnStrategy:0][CrashGrazeStrategy:0][HS:0][ScarifyStrategy:0][RemoveTopSoilStrategy:0][C1:0][C2:0][C3:0][SS:0][Intervention_1:0][Inter:0][PlanBurn:0][TargetBurn:0][HerbicideCost:0][CBAR:0][SR:0]";
	HR_State_12 = "";
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_HTML_Desc = "";
	HR_State_2 = "";
	HR_State_3 = "";
	HR_State_4 = "";
	HR_State_5 = "";
	HR_State_6 = "";
	HR_State_7 = "";
	HR_State_8 = "";
	HR_State_9 = "";
	HR_State_10 = "";
	HR_State_11 = "";
	HR_LinkControlPoints = "";
	HR_NodeSize = "(100, 55)";
	HR_Group = "0";
    }

    potential (Output_Adults | CBAR Input_Adults)
    {
	model_nodes = ();
	model_data = ( Input_Adults * (1 - CBAR) );
    }

    potential (Input_Adults)
    {
	data = ( 1 1 1 1 1 1 );
    }

    potential (Cover_Dec | Input_Cover CBAR)
    {
	model_nodes = ();
	model_data = ( Input_Cover * CBAR );
    }

    potential (Input_Dead)
    {
	data = ( 1 1 1 1 1 1 1 );
    }

    potential (Input_Cover)
    {
	data = ( 1 1 1 1 1 1 1 );
    }

    potential (Input_Seeds)
    {
	data = ( 1 1 1 1 1 );
    }

    potential (Output_Dead | Cover_Dec Input_Dead)
    {
	model_nodes = ();
	model_data = ( min (100, Input_Dead + Cover_Dec) );
	data = ((( 0.48 0.52 0 0 0 0 0 )	%  Cover_Dec=0 - 1  Input_Dead=interval(0,0.01)
		 ( 0 1 0 0 0 0 0 )	%  Cover_Dec=0 - 1  Input_Dead=interval(0.01,1)
		 ( 0 0 1 0 0 0 0 )	%  Cover_Dec=0 - 1  Input_Dead=interval(1,5)
		 ( 0 0 0 1 0 0 0 )	%  Cover_Dec=0 - 1  Input_Dead=interval(5,25)
		 ( 0 0 0 0 1 0 0 )	%  Cover_Dec=0 - 1  Input_Dead=interval(25,50)
		 ( 0 0 0 0 0 1 0 )	%  Cover_Dec=0 - 1  Input_Dead=interval(50,75)
		 ( 0 0 0 0 0 0 1 ))	%  Cover_Dec=0 - 1  Input_Dead=interval(75,100)
		(( 0 1 0 0 0 0 0 )	%  Cover_Dec=1 - 2  Input_Dead=interval(0,0.01)
		 ( 0 0.48 0.52 0 0 0 0 )	%  Cover_Dec=1 - 2  Input_Dead=interval(0.01,1)
		 ( 0 0 0.8752 0.1248 0 0 0 )	%  Cover_Dec=1 - 2  Input_Dead=interval(1,5)
		 ( 0 0 0 0.976 0.024 0 0 )	%  Cover_Dec=1 - 2  Input_Dead=interval(5,25)
		 ( 0 0 0 0 0.9792 0.0208 0 )	%  Cover_Dec=1 - 2  Input_Dead=interval(25,50)
		 ( 0 0 0 0 0 0.9792 0.0208 )	%  Cover_Dec=1 - 2  Input_Dead=interval(50,75)
		 ( 0 0 0 0 0 0 1 ))	%  Cover_Dec=1 - 2  Input_Dead=interval(75,100)
		(( 0 0 1 0 0 0 0 )	%  Cover_Dec=interval(1,5)  Input_Dead=interval(0,0.01)
		 ( 0 0 0.8752 0.1248 0 0 0 )	%  Cover_Dec=interval(1,5)  Input_Dead=interval(0.01,1)
		 ( 0 0 0.2736 0.7264 0 0 0 )	%  Cover_Dec=interval(1,5)  Input_Dead=interval(1,5)
		 ( 0 0 0 0.848 0.152 0 0 )	%  Cover_Dec=interval(1,5)  Input_Dead=interval(5,25)
		 ( 0 0 0 0 0.88 0.12 0 )	%  Cover_Dec=interval(1,5)  Input_Dead=interval(25,50)
		 ( 0 0 0 0 0 0.88 0.12 )	%  Cover_Dec=interval(1,5)  Input_Dead=interval(50,75)
		 ( 0 0 0 0 0 0 1 ))	%  Cover_Dec=interval(1,5)  Input_Dead=interval(75,100)
		(( 0 0 0 1 0 0 0 )	%  Cover_Dec=interval(5,10)  Input_Dead=interval(0,0.01)
		 ( 0 0 0 1 0 0 0 )	%  Cover_Dec=interval(5,10)  Input_Dead=interval(0.01,1)
		 ( 0 0 0 1 0 0 0 )	%  Cover_Dec=interval(5,10)  Input_Dead=interval(1,5)
		 ( 0 0 0 0.6256 0.3744 0 0 )	%  Cover_Dec=interval(5,10)  Input_Dead=interval(5,25)
		 ( 0 0 0 0 0.696 0.304 0 )	%  Cover_Dec=interval(5,10)  Input_Dead=interval(25,50)
		 ( 0 0 0 0 0 0.696 0.304 )	%  Cover_Dec=interval(5,10)  Input_Dead=interval(50,75)
		 ( 0 0 0 0 0 0 1 ))	%  Cover_Dec=interval(5,10)  Input_Dead=interval(75,100)
		(( 0 0 0 1 0 0 0 )	%  Cover_Dec=interval(10,25)  Input_Dead=interval(0,0.01)
		 ( 0 0 0 0.9664 0.0336 0 0 )	%  Cover_Dec=interval(10,25)  Input_Dead=interval(0.01,1)
		 ( 0 0 0 0.8 0.2 0 0 )	%  Cover_Dec=interval(10,25)  Input_Dead=interval(1,5)
		 ( 0 0 0 0.1664 0.8336 0 0 )	%  Cover_Dec=interval(10,25)  Input_Dead=interval(5,25)
		 ( 0 0 0 0 0.296 0.704 0 )	%  Cover_Dec=interval(10,25)  Input_Dead=interval(25,50)
		 ( 0 0 0 0 0 0.296 0.704 )	%  Cover_Dec=interval(10,25)  Input_Dead=interval(50,75)
		 ( 0 0 0 0 0 0 1 ))	%  Cover_Dec=interval(10,25)  Input_Dead=interval(75,100)
		(( 0 0 0 0 1 0 0 )	%  Cover_Dec=interval(25,50)  Input_Dead=interval(0,0.01)
		 ( 0 0 0 0 0.9792 0.0208 0 )	%  Cover_Dec=interval(25,50)  Input_Dead=interval(0.01,1)
		 ( 0 0 0 0 0.88 0.12 0 )	%  Cover_Dec=interval(25,50)  Input_Dead=interval(1,5)
		 ( 0 0 0 0 0.4 0.6 0 )	%  Cover_Dec=interval(25,50)  Input_Dead=interval(5,25)
		 ( 0 0 0 0 0 0.48 0.52 )	%  Cover_Dec=interval(25,50)  Input_Dead=interval(25,50)
		 ( 0 0 0 0 0 0 1 )	%  Cover_Dec=interval(25,50)  Input_Dead=interval(50,75)
		 ( 0 0 0 0 0 0 1 ))	%  Cover_Dec=interval(25,50)  Input_Dead=interval(75,100)
		(( 0 0 0 0 0 1 0 )	%  Cover_Dec=interval(50,75)  Input_Dead=interval(0,0.01)
		 ( 0 0 0 0 0 0.9792 0.0208 )	%  Cover_Dec=interval(50,75)  Input_Dead=interval(0.01,1)
		 ( 0 0 0 0 0 0.88 0.12 )	%  Cover_Dec=interval(50,75)  Input_Dead=interval(1,5)
		 ( 0 0 0 0 0 0.4 0.6 )	%  Cover_Dec=interval(50,75)  Input_Dead=interval(5,25)
		 ( 0 0 0 0 0 0 1 )	%  Cover_Dec=interval(50,75)  Input_Dead=interval(25,50)
		 ( 0 0 0 0 0 0 1 )	%  Cover_Dec=interval(50,75)  Input_Dead=interval(50,75)
		 ( 0 0 0 0 0 0 1 ))	%  Cover_Dec=interval(50,75)  Input_Dead=interval(75,100)
		(( 0 0 0 0 0 0 1 )	%  Cover_Dec=interval(75,100)  Input_Dead=interval(0,0.01)
		 ( 0 0 0 0 0 0 1 )	%  Cover_Dec=interval(75,100)  Input_Dead=interval(0.01,1)
		 ( 0 0 0 0 0 0 1 )	%  Cover_Dec=interval(75,100)  Input_Dead=interval(1,5)
		 ( 0 0 0 0 0 0 1 )	%  Cover_Dec=interval(75,100)  Input_Dead=interval(5,25)
		 ( 0 0 0 0 0 0 1 )	%  Cover_Dec=interval(75,100)  Input_Dead=interval(25,50)
		 ( 0 0 0 0 0 0 1 )	%  Cover_Dec=interval(75,100)  Input_Dead=interval(50,75)
		 ( 0 0 0 0 0 0 1 )));	%  Cover_Dec=interval(75,100)  Input_Dead=interval(75,100)
    }

    potential (Output_Seeds | SR Input_Seeds)
    {
	model_nodes = ();
	model_data = ( Input_Seeds * (1 - SR) );
	data = ((( 1 0 0 0 0 )	%  SR=0  Input_Seeds=interval(0,0.01)
		 ( 0 1 0 0 0 )	%  SR=0  Input_Seeds=interval(0.01,50)
		 ( 0 0 1 0 0 )	%  SR=0  Input_Seeds=interval(50,100)
		 ( 0 0 0 1 0 )	%  SR=0  Input_Seeds=interval(100,200)
		 ( 0 0 0 0 1 ))	%  SR=0  Input_Seeds=interval(200,300)
		(( 1 0 0 0 0 )	%  SR=0.1  Input_Seeds=interval(0,0.01)
		 ( 0 1 0 0 0 )	%  SR=0.1  Input_Seeds=interval(0.01,50)
		 ( 0 0.12 0.88 0 0 )	%  SR=0.1  Input_Seeds=interval(50,100)
		 ( 0 0 0.12 0.88 0 )	%  SR=0.1  Input_Seeds=interval(100,200)
		 ( 0 0 0 0.24 0.76 ))	%  SR=0.1  Input_Seeds=interval(200,300)
		(( 1 0 0 0 0 )	%  SR=0.95  Input_Seeds=interval(0,0.01)
		 ( 0 1 0 0 0 )	%  SR=0.95  Input_Seeds=interval(0.01,50)
		 ( 0 1 0 0 0 )	%  SR=0.95  Input_Seeds=interval(50,100)
		 ( 0 1 0 0 0 )	%  SR=0.95  Input_Seeds=interval(100,200)
		 ( 0 1 0 0 0 )));	%  SR=0.95  Input_Seeds=interval(200,300)
    }

    potential (Output_Cover | Output_Adults Cover_Dec Input_Cover)
    {
	model_nodes = ();
	model_data = ( max (Output_Adults * 100 * 0.0001, Input_Cover - Cover_Dec) );
    }

    potential (CBAR | Product Application)
    {
	model_nodes = (Product Application);
	model_data  = ( truncate (0, Beta (9, 140, -0.01, 1), 1),
			truncate (0, Beta (130, 6.5, 0, 1.03), 1),
			truncate (0, Beta (130, 6.5, 0, 1.03), 1),
			0,
			truncate (0, Beta (9, 140, -0.01, 1), 1),
			truncate (0, Beta (130, 6.5, 0, 1.03), 1),
			truncate (0, Beta (130, 6.5, 0, 1.03), 1),
			0,
			truncate (0, Beta (9, 140, -0.01, 1), 1),
			truncate (0, Beta (130, 6.5, 0, 1.03), 1),
			truncate (0, Beta (130, 6.5, 0, 1.03), 1),
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0 );
    }

    potential (SR | Application Product)
    {
	model_nodes = (Product Application);
	model_data  = ( 0.1,
			0.95,
			0.95,
			0,
			0,
			0.1,
			0.1,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0 );
	data = ((( 0 1 0 )	%  Application=Spot  Product=Flupopranate
		 ( 1 0 0 )	%  Application=Spot  Product=Fusilade
		 ( 1 0 0 )	%  Application=Spot  Product=Glyphosate
		 ( 1 0 0 )	%  Application=Spot  Product=MCPA
		 ( 1 0 0 )	%  Application=Spot  Product=Metsulphuron
		 ( 1 0 0 )	%  Application=Spot  Product=Tordon
		 ( 1 0 0 ))	%  Application=Spot  Product=Grazon
		(( 0 0 1 )	%  Application=Boom/Spread  Product=Flupopranate
		 ( 0 1 0 )	%  Application=Boom/Spread  Product=Fusilade
		 ( 1 0 0 )	%  Application=Boom/Spread  Product=Glyphosate
		 ( 1 0 0 )	%  Application=Boom/Spread  Product=MCPA
		 ( 1 0 0 )	%  Application=Boom/Spread  Product=Metsulphuron
		 ( 1 0 0 )	%  Application=Boom/Spread  Product=Tordon
		 ( 1 0 0 ))	%  Application=Boom/Spread  Product=Grazon
		(( 0 0 1 )	%  Application=Air  Product=Flupopranate
		 ( 0 1 0 )	%  Application=Air  Product=Fusilade
		 ( 1 0 0 )	%  Application=Air  Product=Glyphosate
		 ( 1 0 0 )	%  Application=Air  Product=MCPA
		 ( 1 0 0 )	%  Application=Air  Product=Metsulphuron
		 ( 1 0 0 )	%  Application=Air  Product=Tordon
		 ( 1 0 0 ))	%  Application=Air  Product=Grazon
		(( 1 0 0 )	%  Application=None  Product=Flupopranate
		 ( 1 0 0 )	%  Application=None  Product=Fusilade
		 ( 1 0 0 )	%  Application=None  Product=Glyphosate
		 ( 1 0 0 )	%  Application=None  Product=MCPA
		 ( 1 0 0 )	%  Application=None  Product=Metsulphuron
		 ( 1 0 0 )	%  Application=None  Product=Tordon
		 ( 1 0 0 )));	%  Application=None  Product=Grazon
    }

    potential (Application)
    {
	data = ( 1 1 1 1 );
    }

    potential (Product)
    {
	data = ( 1 1 1 1 1 1 1 );
    }
} % class AnnualGrassHerbicide2
