class NutrientNatural
{
    inputs = (Input_Phosphorous Input_Nitrogen Input_Carbon NUI);
    outputs = (Output_Nitrogen Output_Phosphorous NL Output_Carbon);
    node_size = (100 55);
    HR_ToolBar_CDVT = "0";
    HR_Html_Desc = "0";
    HR_HTML_Desc = "";
    HR_Groups_IDs = "";
    HR_Node_Label_Style = "0";
    HR_Color_DiscreteFunction = "5";
    HR_Desc = "";
    HR_OOBN_CheckConsistency = "1";
    HR_OOBN_FitExpand = "1";
    HR_Zoom_ZoomFactor = "100";
    HR_Groups_GroupColors = "";
    HR_Groups_GroupNames = "";
    HR_Groups_UserGroupsNo = "0";
    HR_Color_Interface = "21";
    HR_Color_Instance = "0";
    HR_Color_Function = "4";
    HR_Color_Utility = "36";
    HR_Color_Decision = "17";
    HR_Color_ContinuousChance = "48";
    HR_Color_DiscreteChance = "16";
    HR_Monitor_InitSD = "2";
    HR_Monitor_Utility_Arrange = "0";
    HR_Monitor_Mean_Variance = "1";
    HR_Monitor_Chance_Utility = "1";
    HR_Monitor_InitStates = "5";
    HR_Monitor_OpenGraph = "0";
    HR_Monitor_GraphPrecision = "100";
    HR_Monitor_AutoUpdGraph = "0";
    HR_Compile_MaxMinimalSeparators = "100000";
    HR_Compile_ApproxEpsilon = "1.0E-5";
    HR_Compile_Approximate = "0";
    HR_Compile_SaveToMemory = "0";
    HR_Compile_Compress = "0";
    HR_Compile_TriangMethod = "0";
    HR_Propagate_AutoNormal = "1";
    HR_Propagate_AutoSum = "1";
    HR_Propagate_Auto = "1";
    HR_Font_Italic = "0";
    HR_Font_Weight = "400";
    HR_Font_Size = "-12";
    HR_Font_Name = "javax.swing.plaf.FontUIResource[family=Tahoma,name=Tahoma,style=plain,size=11]";
    HR_Grid_GridShow = "0";
    HR_Grid_GridSnap = "0";
    HR_Grid_Y = "40";
    HR_Grid_X = "40";

    node NUI
    {
	label = "Nitrogen\nUptake/Input";
	position = (485 125);
	states = ("" "" "" "" "");
	subtype = interval;
	state_values = (-1 -0.5 -0.1 0.1 0.5 1);
	HR_LinkMode = "[Output_Nitrogen:0]";
	HR_State_6 = "";
	HR_State_5 = "";
	HR_NodeSize = "(100, 55)";
	HR_State_4 = "";
	HR_State_3 = "";
	HR_State_2 = "";
	HR_HTML_Desc = "";
	HR_Desc = "";
	HR_State_1 = "";
	HR_State_0 = "";
	HR_Group = "0";
    }

    node Output_Carbon
    {
	label = "Carbon";
	position = (747 325);
	states = ("Enhanced" "Natural");
	HR_LinkMode = "[NL:0]";
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_Group = "0";
    }

    node Input_Carbon
    {
	label = "Carbon";
	position = (323 325);
	states = ("Enhanced" "Natural");
	HR_LinkMode = "[Output_Carbon:0]";
	HR_Group = "0";
	HR_Desc = "";
	HR_State_1 = "";
	HR_State_0 = "";
    }

    node Output_Phosphorous
    {
	label = "Phosphorous";
	position = (747 254);
	states = ("0 - 1" "1 - 2" "" "" "" "");
	subtype = interval;
	state_values = (0 1 2 3 4 5 6);
	HR_HTML_Desc = "";
	HR_State_5 = "";
	HR_State_4 = "";
	HR_State_3 = "";
	HR_State_2 = "";
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_LinkMode = "[C2_1:0][C12:0][NL:0]";
	HR_Group = "0";
    }

    node Output_Nitrogen
    {
	label = "Nitrogen";
	position = (746 189);
	states = ("" "" "" "" "" "");
	subtype = interval;
	state_values = (0 1 2 3 4 5 6);
	HR_State_5 = "";
	HR_State_4 = "";
	HR_State_3 = "";
	HR_State_2 = "";
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_LinkMode = "[C1_1:0][C12:0][NL:0]";
	HR_Group = "0";
    }

    node NL
    {
	label = "Nutrient\nLoad";
	position = (957 254);
	states = ("Highly Enriched" "Moderately Enriched" "Natural");
	subtype = label;
	HR_HTML_Desc = "";
	HR_State_2 = "";
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_LinkControlPoints = "";
	HR_LinkMode = "[C16:0][C1_1:0]";
	HR_Group = "0";
    }

    node Input_Phosphorous
    {
	label = "Phosphorous";
	position = (324 253);
	states = ("0 - 1" "1 - 2" "" "" "" "");
	subtype = interval;
	state_values = (0 1 2 3 4 5 6);
	HR_State_5 = "";
	HR_State_4 = "";
	HR_State_3 = "";
	HR_State_2 = "";
	HR_LinkMode = "[C2_1:0][C12:0][Input_Phosphorous_1:0][Output_Phosphorous:0]";
	HR_Group = "0";
	HR_Desc = "";
	HR_State_1 = "";
	HR_State_0 = "";
    }

    node Input_Nitrogen
    {
	label = "Nitrogen";
	position = (323 188);
	states = ("" "" "" "" "" "");
	subtype = interval;
	state_values = (0 1 2 3 4 5 6);
	HR_State_5 = "";
	HR_State_4 = "";
	HR_State_3 = "";
	HR_State_2 = "";
	HR_LinkMode = "[C1_1:0][C12:0][Input_Nitrogen_1:0][Output_Nitrogen:0]";
	HR_Group = "0";
	HR_Desc = "";
	HR_State_1 = "";
	HR_State_0 = "";
    }

    potential (NUI)
    {
	data = ( 1 1 1 1 1 );
    }

    potential (Output_Carbon | Input_Carbon)
    {
	data = (( 0 1 )	%  Input_Carbon=Enhanced
		( 0 1 ));	%  Input_Carbon=Natural
    }

    potential (Input_Carbon)
    {
	data = ( 1 1 );
    }

    potential (Output_Phosphorous | Input_Phosphorous)
    {
	model_nodes = ();
	samples_per_interval = 1000;
	model_data = ( Input_Phosphorous * 0.999 );
	data = (( 1 0 0 0 0 0 )	%  Input_Phosphorous=0 - 1
		( 0.001 0.999 0 0 0 0 )	%  Input_Phosphorous=1 - 2
		( 0 0.002 0.998 0 0 0 )	%  Input_Phosphorous=interval(2,3)
		( 0 0 0.003 0.997 0 0 )	%  Input_Phosphorous=interval(3,4)
		( 0 0 0 0.004 0.996 0 )	%  Input_Phosphorous=interval(4,5)
		( 0 0 0 0 0.005 0.995 ));	%  Input_Phosphorous=interval(5,6)
    }

    potential (Output_Nitrogen | NUI Input_Nitrogen)
    {
	model_nodes = ();
	model_data = ( min (6, max (0, Input_Nitrogen * 0.999 + NUI)) );
	data = ((( 1 0 0 0 0 0 )	%  NUI=interval(-1,-0.5)  Input_Nitrogen=interval(0,1)
		 ( 0.7504 0.2496 0 0 0 0 )	%  NUI=interval(-1,-0.5)  Input_Nitrogen=interval(1,2)
		 ( 0 0.7504 0.2496 0 0 0 )	%  NUI=interval(-1,-0.5)  Input_Nitrogen=interval(2,3)
		 ( 0 0 0.7504 0.2496 0 0 )	%  NUI=interval(-1,-0.5)  Input_Nitrogen=interval(3,4)
		 ( 0 0 0 0.7504 0.2496 0 )	%  NUI=interval(-1,-0.5)  Input_Nitrogen=interval(4,5)
		 ( 0 0 0 0 0.7504 0.2496 ))	%  NUI=interval(-1,-0.5)  Input_Nitrogen=interval(5,6)
		(( 1 0 0 0 0 0 )	%  NUI=interval(-0.5,-0.1)  Input_Nitrogen=interval(0,1)
		 ( 0.304 0.696 0 0 0 0 )	%  NUI=interval(-0.5,-0.1)  Input_Nitrogen=interval(1,2)
		 ( 0 0.304 0.696 0 0 0 )	%  NUI=interval(-0.5,-0.1)  Input_Nitrogen=interval(2,3)
		 ( 0 0 0.304 0.696 0 0 )	%  NUI=interval(-0.5,-0.1)  Input_Nitrogen=interval(3,4)
		 ( 0 0 0 0.304 0.696 0 )	%  NUI=interval(-0.5,-0.1)  Input_Nitrogen=interval(4,5)
		 ( 0 0 0 0 0.304 0.696 ))	%  NUI=interval(-0.5,-0.1)  Input_Nitrogen=interval(5,6)
		(( 0.976 0.024 0 0 0 0 )	%  NUI=interval(-0.1,0.1)  Input_Nitrogen=interval(0,1)
		 ( 0.024 0.952 0.024 0 0 0 )	%  NUI=interval(-0.1,0.1)  Input_Nitrogen=interval(1,2)
		 ( 0 0.024 0.952 0.024 0 0 )	%  NUI=interval(-0.1,0.1)  Input_Nitrogen=interval(2,3)
		 ( 0 0 0.024 0.952 0.024 0 )	%  NUI=interval(-0.1,0.1)  Input_Nitrogen=interval(3,4)
		 ( 0 0 0 0.0288 0.9504 0.0208 )	%  NUI=interval(-0.1,0.1)  Input_Nitrogen=interval(4,5)
		 ( 0 0 0 0 0.0288 0.9712 ))	%  NUI=interval(-0.1,0.1)  Input_Nitrogen=interval(5,6)
		(( 0.704 0.296 0 0 0 0 )	%  NUI=interval(0.1,0.5)  Input_Nitrogen=interval(0,1)
		 ( 0 0.704 0.296 0 0 0 )	%  NUI=interval(0.1,0.5)  Input_Nitrogen=interval(1,2)
		 ( 0 0 0.704 0.296 0 0 )	%  NUI=interval(0.1,0.5)  Input_Nitrogen=interval(2,3)
		 ( 0 0 0 0.704 0.296 0 )	%  NUI=interval(0.1,0.5)  Input_Nitrogen=interval(3,4)
		 ( 0 0 0 0 0.704 0.296 )	%  NUI=interval(0.1,0.5)  Input_Nitrogen=interval(4,5)
		 ( 0 0 0 0 0 1 ))	%  NUI=interval(0.1,0.5)  Input_Nitrogen=interval(5,6)
		(( 0.2496 0.7504 0 0 0 0 )	%  NUI=interval(0.5,1)  Input_Nitrogen=interval(0,1)
		 ( 0 0.2496 0.7504 0 0 0 )	%  NUI=interval(0.5,1)  Input_Nitrogen=interval(1,2)
		 ( 0 0 0.2496 0.7504 0 0 )	%  NUI=interval(0.5,1)  Input_Nitrogen=interval(2,3)
		 ( 0 0 0 0.2496 0.7504 0 )	%  NUI=interval(0.5,1)  Input_Nitrogen=interval(3,4)
		 ( 0 0 0 0 0.2496 0.7504 )	%  NUI=interval(0.5,1)  Input_Nitrogen=interval(4,5)
		 ( 0 0 0 0 0 1 )));	%  NUI=interval(0.5,1)  Input_Nitrogen=interval(5,6)
    }

    potential (NL | Output_Carbon Output_Nitrogen Output_Phosphorous)
    {
	model_nodes = (Output_Carbon);
	model_data  = ( if (Output_Phosphorous > 3, Distribution (0, 1, 0), Distribution (0, 0, 1)),
			if (and (Output_Phosphorous > 3, Output_Nitrogen > 3), Distribution (1, 0, 0), if (or (Output_Phosphorous > 3, Output_Nitrogen > 3), Distribution (0, 1, 0), Distribution (0, 0, 1))) );
    }

    potential (Input_Phosphorous)
    {
	data = ( 1 1 1 1 1 1 );
    }

    potential (Input_Nitrogen)
    {
	data = ( 1 1 1 1 1 1 );
    }
} % class NutrientNatural
